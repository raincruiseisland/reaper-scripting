.button {
  --padding-vertical: var(--button-padding-vertical);
  --padding-horizontal: var(--button-padding-horizontal);
  --stroke: var(--button-stroke) var(--stroke-color, currentColor);
  --radius: var(--button-radius);
  --font-weight: var(--button-font-weight);
  --color: hsl(var(--button-color));
  --background: hsl(var(--button-background));

  display: inline-block;
  border: 0;
  padding-block: var(--padding-vertical);
  padding-inline: var(--padding-horizontal);
  border-radius: var(--radius);
  font-weight: var(--font-weight);
  background-color: var(--background);
  color: var(--color);
  text-decoration: none;
  cursor: pointer;
  transition: .3s ease-in-out;
}
.button:not([data-varient], [data-unavailable], .skip-link):hover {
  transform: translateY(-5px);
}
.button svg path {
  fill: transparent;
  stroke: hsl(var(--svg-stroke-color, var(--color-svg)));
}
.button:hover svg path {
  fill: hsl(var(--svg-fill-color, var(--color-svg)));
}

.button[data-varient="small"] {
  --stroke-color: hsl(var(--color-neutral-glare));
  --color: hsl(var(--color-neutral-glare));
  --background: transparent;
  font-size: var(--text-miniscule);
  border: var(--stroke);
}
.button[data-varient="small"]:hover {
  --stroke-color: transparent;
  --color: hsl(var(--color-neutral-shade));
  --background: hsl(var(--color-neutral-glare));
}

.button[data-varient="svg"] {
  --padding-vertical: 0;
  --padding-horizontal: 0;
  --background: transparent;
}

.button[data-unavailable] {
  cursor: not-allowed;
}
.button[data-unavailable]:not(:has(> svg)) {
  --background: hsl(var(--color-disabled));
}
.button[data-unavailable]:has(> svg) {
  --svg-stroke: hsl(var(--color-disabled));
  --svg-fill: hsl(var(--color-disabled));
}
.button[data-unavailable] > svg > path,
.button[data-unavailable]:hover > svg > path {
  fill: var(--svg-fill);
  stroke: var(--svg-stroke);
}